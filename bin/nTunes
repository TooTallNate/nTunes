#!/usr/bin/env node

// Set the process title
process.title = "nTunes";

// Standard Node modules.
var fs = require("fs");

// 'npm' dependencies.
var asciimo = require("asciimo").Figlet;
var colors = require("colors");
var connect = require("connect");


// Load up the "package.json" for version info.
var packageJson = JSON.parse(fs.readFileSync(__dirname + "/../package.json"));


// Handle 'stdin' for certain commands.
var stdin = process.openStdin();
stdin.setEncoding("utf8");
stdin.on('data', function (command) {
  command = command.trim();
  if (command.length === 0) return;
  switch(command) {
    case "help":
    case "printHelp":
    case "print-help":
      console.log("  Supported runtime commands:".blue.bold);
      console.log("    help".green.bold + " - Shows this help printout.".green);
      console.log("    exit".green.bold + " - (Ctrl+D) Closes the nTunes server process.".green);
      console.log("    restart".green.bold + " - (Ctrl+C) Restarts the nTunes server (useful for development).".green);
      console.log("    title".green.bold + " - Prints the awesome 'nTunes' 3D title.".green);
      break;
    case "restart":
    case "reboot":
      restartServer();
      break;
    case "exit":
    case "quit":
    case "close":
      process.exit();
      break;
    case "title":
    case "printTitle":
    case "print-title":
      printTitle();
      break;
    default:
      console.log("Unknown command: ".red + command.red.bold);
  }
});
// Quit the process on Ctrl+D.
stdin.on("end", function() {
  process.exit();
});
// Quickly and easily restart the 'nTunes' server with Ctrl+C.
process.on("SIGINT", function() {
  restartServer();
  console.log("If you meant to kill 'nTunes', use Ctrl+D instead...".cyan.bold.inverse);
});


// Listen for the "uncaughtException" event, otherwise the server goes down! Oh noes!
// TODO: Do something else here?
process.on('uncaughtException', function (err) {
  console.error('Caught exception:' + err);
  console.error(err.stack);
});


// Create the nTunes server instance.
var nTunes = require("nTunes").createServer(
  connect.logger(),
  connect.favicon(),
  connect.staticProvider(__dirname + "/../www")
);

// TODO: Make port configurable
var port = 8888;
nTunes.listen(port, function() {
  asciimo.write(packageJson.name, 'larry3d', function(art) {
    printTitle = function() {
      console.log(art.trimRight().blue.bold);
    }
    printTitle();
    console.log(("  v" + packageJson.version).blue);
    console.log("          HTTP Server started on port: ".magenta + (""+port).red.bold);
    console.log("     Type ".green + "'help'".green.bold + " for a list of runtime commands...".green);      
  });  
});


// Prints the 'asciimo' title, the version, and the running port number.
var printTitle; // Gets set in the HTTP server 'listen' callback.

// TODO: Restart the server, but reloading the 'nTunes' module fresh.
function restartServer() {
  console.log("NOT SUPPORTED YET!".red.bold);
}
